const App = () => {
  const name = 'bhavya';
  const nameShowing = false;
  return (
    <div className="App">
      <h1>{nameShowing ? name : 'name not specified'}</h1>
    </div>
  );
}







THis is a react component
it is like an if-else
const App = () => {
  const name = 'bhavya';
  return (
    <div className="App">
      {name ? (                 
        <>
          <h1>{name}</h1>
        </>
      ) : (                        //if name='null'
        <h1>there is no name</h1>
      )}
    </div>
  );
}









const Person = () => {
  return (
    <>
      <h1>Name: Bhavya</h1>
      <h2>Last Name: Singh</h2>
      <h2>Age: 19</h2>
    </>
  )
}
const App = () => {
  return (
    <div className="App">
      <Person/>
    </div>
  );
}








const Person = (props) => {
  return (
    <>
      <h1>Name: {props.name}</h1>
      <h2>Last Name: Singh</h2>
      <h2>Age: 19</h2>
    </>
  )
}
const App = () => {
  return (
    <div className="App">
      <Person name={'Bhavya'}/>
      <Person/>
      <Person/>
    </div>
  );
}












import './App.css';
import { useState } from 'react';



const App = () => {
  const [Counter, setCounter] = useState(0);

  return (
    <div className="App">
      <button onClick={() => setCounter((prevCount) => prevCount - 1)}>-</button>
      <h1>{Counter}</h1>
      <button onClick={() => setCounter((prevCount) => prevCount + 1)}>+</button>
    </div>
  );
}

export default App;

const [Counter, setCounter] = useState(0); is a useState snippet














import { useState, useEffect } from 'react';

 useEffect(() => {
    alert('reload')
  });











  import './App.css';
import { useState, useEffect } from 'react';



const App = () => {
  const [Counter, setCounter] = useState(0);

  useEffect(() => {
    alert("You've changed the counter to " + Counter)
  }, [Counter]);


  return (
    <div className="App">
      <button onClick={() => setCounter((prevCount) => prevCount - 1)}>-</button>
      <h1>{Counter}</h1>
      <button onClick={() => setCounter((prevCount) => prevCount + 1)}>+</button>
    </div>
  );
}

export default App;












const App = () => {
                                                                    B

    const searchMovies = async (title) => {
        const response = await fetch(`${API_URL}&s=${title}`);      E
        const data = await response.json();

        console.log(data.Search);                                   F
    }

    useEffect(() => {
        searchMovies('Superman')                                    O 
    }, []);

    return (                                                        R
        <div className='app'>
            <h1>Leisure</h1>
            <div className='search'>                                E

                <input
                    placeholder='Search For Movies'
                    value="Superman"
                    onChange={() => { }}
                />
                <img
                    src={SearchIcon}
                    alt='search'
                    onClick={() => { }}
                />

            </div>
            <div className='container'>
                <MovieCard movie1={movie1} />
            </div>
        </div>

    );
}


export default App; 


















const App = () => {
    const [Movies, setMovies] = useState([])                           A

    const searchMovies = async (title) => {
        const response = await fetch(`${API_URL}&s=${title}`);         F
        const data = await response.json();

        setMovies(data.Search);                                        T
    }

    useEffect(() => {
        searchMovies('Superman')                                       E
    }, []);

    return (
        <div className='app'>
            <h1>Leisure</h1>
            <div className='search'>                                   R

                <input
                    placeholder='Search For Movies'
                    value="Superman"
                    onChange={() => { }}
                />
                <img
                    src={SearchIcon}
                    alt='search'
                    onClick={() => { }}
                />
             </div> 
                {
                    Movies?.length > 0
                        ? (
                            <div className='container'>
                                <MovieCard movie1={Movies[0]} />
                            </div>
                        ) : (
                            <div className='empty'>
                                <h2> No movies found</h2>
                            </div>
                        )
                }

            
        </div>

    );
}


export default App; 














Movies?.length > 0
                        ? (
                            <div className='container'>
                                {Movies.map((movie) => (
                                    <MovieCard movie={movie} />
                                ))}
                            </div>
                        ) : (
                            <div className='empty'>
                                <h2> No movies found</h2>
                            </div>
                        )
Using this we are looping over our Movies array"useState([])" fetched form the API and displaying its MovieCard 
change all "movie1" to "movie" in MovieCard.jsx















BEFORE
<input
                    placeholder='Search For Movies'
                    value="Superman"
                    onChange={() => { }}
                />
AFTER
const [SearchTerm, setSearchTerm] = useState('');

<input
                    placeholder='Search For Movies'
                    value={searchTerm}
                    onChange={(e) => setsearchTerm{e.target.value}}
                />